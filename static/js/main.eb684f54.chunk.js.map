{"version":3,"sources":["logo.svg","data.js","Component/Detail.js","Component/Cart.js","App.js","reportWebVitals.js","Dataconnect/Reducers.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","React","Component","TabContent","useEffect","스위치변경","tabidx","Info","재고","Myalet","className","connect","state","console","log","reducer","alert열렸니","reducer2","useState","is_alert","is_alert_fn","inputData","inputData_fn","tabidx_fn","스위치","sharedata","useContext","재고context","timer","setTimeout","clearTimeout","useParams","history","useHistory","shoes_detail","shoes","find","item","shoes_url","parseInt","onChange","e","target","value","src","width","onClick","사본재고","재고변경","dispatch","type","payload","name","quantity","push","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","Cartrow","useDispatch","index","Cart","redux_store","useSelector","store","Table","striped","bordered","hover","map","createContext","MainPage","loadingUI","loadingUI_fn","Button","Provider","ShoesItem","LoadingMsg","axios","get","then","result","res","data","ajaxPush","catch","finally","li_id","li_item","li_index","li_img","App","Data","shoes변경","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","as","to","NavDropdown","Divider","exact","path","moredata","rawdata","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","createStore","combineReducers","액션","datacontain","copy","comp","filter","length","ReactDOM","render","StrictMode","store_rd","document","getElementById"],"mappings":"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","file":"static/js/main.eb684f54.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default [\r\n    {\r\n        id : 0,\r\n        title : \"White and Black\",\r\n        content : \"Born in France\",\r\n        price : 120000\r\n    },\r\n\r\n    {\r\n        id : 1,\r\n        title : \"Red Knit\",\r\n        content : \"Born in Seoul\",\r\n        price : 110000\r\n    },\r\n\r\n    {\r\n        id : 2,\r\n        title : \"Grey Yordan\",\r\n        content : \"Born in the States\",\r\n        price : 130000\r\n    }\r\n] ","import React, {useContext, useEffect, useState} from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport '../scss/Detail.scss';\r\nimport {재고context} from '../App.js';\r\nimport { Nav } from 'react-bootstrap';\r\n//애니메이션\r\nimport {CSSTransition} from 'react-transition-group';\r\n//리덕스\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet 박스 = styled.div`\r\n    padding: 20px;\r\n`;\r\nlet 제목 = styled.h4`    \r\n    font-size : 25px;\r\n    color: ${props => props.색상};\r\n`;\r\n\r\nclass Detail2 extends React.Component{\r\n    componentDidMount(){\r\n        //컴포넌트가 Mount 되었을때 실행할 코드 (렌더링 될때)\r\n        //주로 Ajax 같은 것도 이런 곳에서 자주 사용\r\n    }\r\n    componentWillUnmount(){\r\n        //컴포넌트가 Unmount 되었을때 실행할 코드 (사라질 때)\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction DetailPage(props){\r\n    let [is_alert,is_alert_fn] = useState(true);\r\n    let [inputData, inputData_fn] = useState('');\r\n    let [tabidx,tabidx_fn] = useState(0);\r\n    let [스위치,스위치변경] = useState(false);\r\n\r\n    //공유CONTEXT\r\n    let sharedata = useContext(재고context);\r\n\r\n    useEffect(()=>{\r\n        //컴포넌트가 mount 되었을 때\r\n        //컴포넌트가 update 될 때        \r\n        let timer = setTimeout(()=>{            \r\n            // const alert_box =  document.getElementsByClassName('.my-alert my-alert2');\r\n            // const alert_box =  document.querySelector('.my-alert my-alert2');\r\n            //alert_box.setAttribute('style','display:none');\r\n            // alert_box.style.display='none';            \r\n            is_alert_fn(false);\r\n        },2000);\r\n        // return function closerAction(){ alert('unmount') }\r\n        return ()=>{ console.log('closer action'); clearTimeout(timer);  }\r\n    },[]);\r\n\r\n    let {id} = useParams();\r\n    let history = useHistory();\r\n    const shoes_detail = props.shoes.find((item)=>{ return item.id==id; });\r\n    const shoes_url = `https://codingapple1.github.io/shop/shoes${(parseInt(id)+1)}.jpg`;\r\n\r\n    const 재고 = props.재고;\r\n\r\n    return(\r\n        <div>\r\n        <div className=\"container\">\r\n            <div>공유CONEXTE문법 : {sharedata[0]}</div>\r\n            <박스>\r\n                <제목 색상={'tomato'} >Product</제목>\r\n                <제목 className=\"red\" >Detail</제목>\r\n            </박스>\r\n\r\n            {inputData}\r\n            <input onChange={(e)=>{\r\n                inputData_fn(e.target.value);\r\n            }} />\r\n\r\n            {\r\n                is_alert\r\n                ?\r\n                <Myalet />:null\r\n            }\r\n            <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <img src={shoes_url} width=\"100%\" />\r\n            </div>\r\n            <div className=\"col-md-6 mt-4\">\r\n                <h4 className=\"pt-5\">{shoes_detail.title}</h4>\r\n                <p>{shoes_detail.content}</p>\r\n                <p>{shoes_detail.price}</p>\r\n\r\n                <Info 재고={재고[id]} />\r\n\r\n                <button className=\"btn btn-danger\" onClick={()=>{\r\n                    let 사본재고 = [...재고];\r\n                    // console.log(사본재고);\r\n                    사본재고[id] = 사본재고[id]-1;\r\n                    // console.log(사본재고[0]);\r\n                    // props.재고변경([9,10,11]);\r\n                    props.재고변경(사본재고);\r\n\r\n\r\n                    props.dispatch({type:'shoes-order',payload:{id:shoes_detail.id,name:shoes_detail.title,quantity:1}})\r\n                    history.push('/cart');\r\n                }}\r\n                >주문하기</button>\r\n                &nbsp;\r\n                <button className=\"btn btn-danger\" onClick={()=>{ \r\n                    history.goBack();\r\n                    // history.push('/');\r\n                }}>뒤로가기</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n\r\n        <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n            <Nav.Item>\r\n            <Nav.Link eventKey=\"link-0\" onClick={()=>{스위치변경(false); tabidx_fn(0)}}>정보</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n            <Nav.Link eventKey=\"link-1\" onClick={()=>{스위치변경(false); tabidx_fn(1)}}>상세</Nav.Link>\r\n            </Nav.Item>\r\n        </Nav>\r\n\r\n        <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n            <TabContent tabidx={tabidx} 스위치변경={스위치변경}/>\r\n        </CSSTransition>\r\n        \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction TabContent(props){\r\n\r\n    useEffect(()=>{\r\n        props.스위치변경(true);\r\n    });\r\n\r\n    const tabidx = props.tabidx\r\n    //이것도 맞고, 아래의 object 자료형을 응용한 enum 형태도 맞음\r\n    //또한 enum 에서의 object 를 \r\n    //따로 외부 객체 형태의 변수로 빼서 사용도 가능\r\n    //ex-------------------------------\r\n    //선언\r\n    // var 탭UI = { \r\n    //     info : <p>상품정보</p>,\r\n    //     shipping : <p>배송관련</p>,\r\n    //     refund : <p>환불약관</p>\r\n    //   }\r\n    //사용\r\n    //   <div>\r\n    //   {\r\n    //     탭UI[현재상태]\r\n    //   }\r\n    // </div>\r\n\r\n\r\n    // switch(parseInt(tabidx)){\r\n    //     case 0:\r\n    //         return <div>상품설명</div>\r\n    //     case 1:\r\n    //         return <div>배송정보</div>\r\n    //     default:\r\n    //         return <div>상품설명</div>\r\n    // }    \r\n    \r\n    return(\r\n        {\r\n            0:<div>상품설명</div>,\r\n            1:<div>배송정보</div>\r\n        }[tabidx]\r\n    )\r\n}\r\n\r\n\r\nfunction Info(props){\r\n    return (\r\n        <p>재고 : {props.재고}</p>\r\n    )\r\n}\r\n\r\n\r\nfunction Myalet(){\r\n    return(\r\n        <div className=\"my-alert my-alert2\">\r\n            <p>재고가 얼마 남지 않았습니다</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction reduceProvider(state){\r\n    console.log(state);\r\n    return {     \r\n        state :  state.reducer,\r\n        alert열렸니: state.reducer2\r\n    }\r\n}\r\n\r\n\r\nexport default connect(reduceProvider)(DetailPage);\r\n\r\n// export default DetailPage;","import React from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction Cart(props){\r\n\r\n    //훅을 이용해서 사용하는 방법 - 최신문법\r\n    //REDUX 변수 얻어오기 - 신규 버전\r\n    let redux_store = useSelector((store)=>store)\r\n    // console.log(redux_store);    \r\n    let dispatch = useDispatch();\r\n    //훅을 이용해서 사용하는 방법 - 최신문법\r\n\r\nreturn(\r\n    <div>\r\n    <Table striped bordered hover>\r\n    <thead>\r\n        <tr>\r\n        <th>#</th>\r\n        <th>상품명</th>\r\n        <th>수량</th>\r\n        <th>변경</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        {\r\n            // props.state.map((item,index)=>{                \r\n                redux_store.reducer.map((item,index)=>{ \r\n                return (<Cartrow item={item} index={index} dispatch={dispatch}/>)\r\n\r\n                // return(\r\n                // <tr>\r\n                // <td>{ parseInt(item.id)+1 }</td>\r\n                // <td>{ item.name }</td>\r\n                // <td>{ item.quan }</td>\r\n                // <td><button onClick={()=>{ props.dispatch({type:'수량증가'}) }}>+</button></td>\r\n                // </tr>  \r\n                // )\r\n            })\r\n        }\r\n    </tbody>\r\n    </Table>   \r\n    {\r\n        // props.alert열렸니?\r\n        \r\n        //이것도 맞고, 아래것도 맞음\r\n        //여긴 삼항연산자\r\n        // redux_store.reducer2?\r\n        // (<div className=\"my-alert2\">\r\n        // <p>지금 구매하시면 신규할인 20%</p>\r\n        // {/* <button className=\"btn btn-primary\" onClick={()=>{props.dispatch({type:'banner_close'})}}>닫기</button> */}\r\n        // <button className=\"btn btn-primary\" onClick={()=>{ dispatch({type:'banner_close'})}}>닫기</button>\r\n        // </div>)\r\n        // :null\r\n\r\n        //1===1 && 자료형\r\n        redux_store.reducer2 &&\r\n        (<div className=\"my-alert2\">\r\n        <p>지금 구매하시면 신규할인 20%</p>        \r\n        <button className=\"btn btn-primary\" onClick={()=>{ dispatch({type:'banner_close'})}}>닫기</button>\r\n        </div>)\r\n                \r\n    }\r\n\r\n    \r\n    </div>\r\n)\r\n}\r\n\r\nfunction Cartrow(props){    \r\n    let dispatch = useDispatch();\r\nreturn(\r\n    <tr>\r\n    <td>{ parseInt(props.index)+1 }</td>\r\n    <td>{ props.item.name }</td>\r\n    <td>{ props.item.quantity }</td>\r\n    <td>\r\n        <button onClick={()=>{ dispatch({type:'수량증가', payload:{id:props.item.id}}) }}>+</button>\r\n        &nbsp;&nbsp;\r\n        <button onClick={()=>{ dispatch({type:'수량감소', payload:{id:props.item.id}}) }}>-</button>\r\n    </td>\r\n    </tr>        \r\n)\r\n}\r\n\r\n//REDUX 변수 얻어오기 - 구 버전\r\n// function state를props화(state){\r\n//     return {\r\n//         // 상품명 : state.name\r\n//         state :  state.reducer,\r\n//         alert열렸니: state.reducer2\r\n//     }\r\n// }\r\n// export default connect(state를props화)(Cart)\r\n\r\nexport default Cart;","/* eslint-disable */\n\nimport logo from './logo.svg';\nimport React, {useState,useContext} from 'react';\nimport { Navbar,Container,Nav,NavDropdown,Button } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nimport DetailPage from './Component/Detail.js';\nimport axios from 'axios'; //react에서 사용하는 ajax library\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport Cart from './Component/Cart.js';\n\n\nexport let 재고context = React.createContext();\n\n\nfunction App() {\n\n  //데이터는 상위컴포넌트에서 하위컴포넌트로 전해주는 방식으로 써야됨\n  //일종의 국룰...인데 \n  //그 이유는 각 하위컴포넌트에서 상위컴포넌트로 데이터를 올려보내주는 방식이\n  //나중에 더 힘든 상황을 만듬\n  //그래서 다른 파일로 state를 뺀다던지 아니면  \n  //redux파일에 보관한다. (redux 란 부분 찾아보기)\n  let [shoes,shoes변경] = useState(Data);\n  let [재고,재고변경] = useState([10,11,12]);\n  let [sharedata,sharedata_fn] = useState(['test1','test2','test3']);\n\n  function ajaxPush(moredata){\n    let rawdata = [...shoes];    \n    moredata.map((item,index)=>{\n      rawdata.push(item);\n    })    \n    shoes변경(rawdata);\n    //정답\n    // shoes변경([...shoes,...moredata]);\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">ShoeShop</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/Detail/2\">Detail</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n\n      \n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage shoes={shoes} ajaxPush={ajaxPush} 재고={재고}></MainPage>\n        </Route>\n\n        \n        <Route path=\"/detail/:id\">\n          <재고context.Provider value={sharedata}>        \n          <DetailPage shoes={shoes} 재고={재고} 재고변경={재고변경}></DetailPage>\n          </재고context.Provider>\n        </Route>       \n        \n\n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n\n        <Route path=\"/:id\">\n          <div>아무거나 적었을때 이거 보여주셈</div>\n        </Route>\n      </Switch>\n\n\n\n    </div>\n  );\n}\n\n\n\nfunction MainPage(props){\n\n  let [loadingUI, loadingUI_fn] = useState(false);\n\n  return(\n      <div>\n        <div className=\"Wrap-Jumbotron\">\n        <div className=\"Jumbotron\">\n          <h1>20% Season Off</h1>\n          <p>\n            This is a simple hero unit, a simple jumbotron-style component for calling\n            extra attention to featured content or information.\n          </p>\n          <p>\n            <Button variant=\"primary\">Learn more</Button>\n          </p>\n        </div>\n      </div>\n\n      <div className=\"container\">\n\n        <재고context.Provider value={props.재고}>\n\n        <div className=\"row\">\n          {props.shoes.map((item,index)=>{\n            return( <ShoesItem item={item} index={index} key={index} />)\n          })}\n        </div>\n\n        </재고context.Provider>\n\n\n        {loadingUI?<LoadingMsg />:null}\n        <button className=\"btn btn-primary\" onClick={()=>{\n\n          // axios.post('서버URL',{ id:'codingapple',pw:1234 });\n\n          \n          loadingUI_fn(true);\n\n          //fetch('https://codingapple1.github.io/shop/data2.json')          \n          axios.get('https://codingapple1.github.io/shop/data2.json')\n          .then((result)=>{ \n            console.log('성공했어요');            \n            loadingUI_fn(false);\n            const res = result.data;\n            props.ajaxPush(res);                        \n          })\n          .catch(()=>{ console.log('실패했어요') })\n          .finally(()=>{})\n          ;\n\n          \n        }}>더보기</button>\n      </div>\n    </div>\n  )\n}\n\nfunction LoadingMsg(){\n  return(\n    <div>Now Loaing...</div>\n  )\n}\n\n\nfunction ShoesItem(props){\n\n  //hook\n  let 재고 = useContext(재고context);\n  let history = useHistory();\n\n  const li_id = props.item.id;\n  const li_item = props.item;\n  const li_index = props.index+1;  \n  const li_img = `https://codingapple1.github.io/shop/shoes${li_index}.jpg`;\n  return(\n    <div className=\"col-md-4\" onClick={()=>{ history.push('/detail/'+ li_id) }}>\n      <img src={li_img} width=\"100%\" />\n      <h4>{li_item.title}</h4>\n      <p>{li_item.content} & {li_item.price}</p>\n      {/* {재고[0]} */}\n      {/* <재고데이터></재고데이터> */}\n\n    </div>    \n  )\n}\n\nfunction 재고데이터(){\n  let 재고 = useContext(재고context);\n  return(\n    <p>재고 : {재고[0]}</p>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//리덕스 REDUX\r\nimport { createStore,combineReducers } from 'redux';\r\n\r\n\r\n\r\n//광고팝업닫기\r\nfunction reducer2(state=true,액션){\r\n    if(액션.type==='banner_close'){\r\n        state=false;\r\n        return state;\r\n    }\r\n    else{\r\n        return state;\r\n    }\r\n}\r\n\r\n\r\n//장바구니 테이블 리스트\r\nlet 초기값 = [\r\n    // {id:0, name:'멋진신발', quantity:2},\r\n    // {id:1, name:'멋진신발2', quantity:3}\r\n];\r\nfunction reducer(state=초기값,액션){\r\n\r\n    switch(액션.type){\r\n        case '수량증가':{            \r\n            const datacontain = 액션.payload;\r\n            let copy = [...state];\r\n            //let data = state.findIndex((a)=>{ return a.id===datacontain.id});\r\n            let comp = copy.filter((item)=>{ return item.id===datacontain.id});\r\n            if(comp.length>0){                \r\n                comp[0].quantity++;\r\n            }\r\n            return copy;\r\n        }            \r\n        case '수량감소': {\r\n            const datacontain = 액션.payload;\r\n            let copy = [...state];\r\n            let comp = copy.filter((item)=>{ return item.id===datacontain.id});\r\n            if(comp.length>0){                \r\n                comp[0].quantity--;\r\n            }\r\n            return copy;            \r\n        }\r\n        case 'shoes-order':{\r\n            const datacontain = 액션.payload;\r\n            let copy = [...state];\r\n            let comp = copy.filter((item)=>{ return item.id===datacontain.id});\r\n            if(comp.length>0){                \r\n                comp[0].quantity++;\r\n            }\r\n            else{                \r\n                copy.push(datacontain);\r\n            }\r\n            return copy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    // if( 액션.type==='수량증가' ){\r\n    //     const datacontain = 액션.payload;\r\n    //     let copy = [...state];\r\n    //     copy[0].quan++;\r\n    //     return copy\r\n    // }\r\n    // else if( 액션.type==='수량감소' ){\r\n    //     let copy = [...state];\r\n    //     copy[0].quan--;\r\n    //     return copy\r\n    // }\r\n    // else{\r\n    //     return state\r\n    // }  \r\n}\r\n\r\nlet store = createStore(combineReducers({reducer,reducer2}));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\n//리덕스 REDUX\nimport {Provider} from 'react-redux';\n// import { createStore,combineReducers } from 'redux';\n\nimport store_rd from './Dataconnect/Reducers.js'\n\n\n// function reducer2(state=true,액션){\n//   if(액션.type==='banner_close'){\n//     state=false;\n//     return state;\n//   }\n//   else{\n//     return state;\n//   }\n// }\n\n\n// let 초기값 = [\n//   {id:0, name:'멋진신발', quan:2},\n//   {id:1, name:'멋진신발2', quan:3}\n// ];\n// function reducer(state=초기값,액션){\n//   if( 액션.type==='수량증가' ){\n//     let copy = [...state];\n//     copy[0].quan++;\n//     return copy\n//   }\n//   else if( 액션.type==='수량감소' ){\n//     let copy = [...state];\n//     copy[0].quan--;\n//     return copy\n//   }\n//   else{\n//     return state\n//   }  \n// }\n\n// //let store = createStore(reducer); //()=>{ return [{id:0, name:'멋진신발', quan:2},{id:1, name:'멋진신발2', quan:3}] });\n// let store = createStore(combineReducers({reducer,reducer2}));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store_rd}>\n      <App />\n    </Provider>      \n    </BrowserRouter>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}