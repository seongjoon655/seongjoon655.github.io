{"version":3,"sources":["logo.svg","data.js","Component/Detail.js","Component/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","React","Component","TabContent","useEffect","스위치변경","tabidx","parseInt","Info","재고","Myalet","className","DetailPage","useState","is_alert","is_alert_fn","inputData","inputData_fn","tabidx_fn","스위치","sharedata","useContext","재고context","timer","setTimeout","console","log","clearTimeout","useParams","history","useHistory","shoes_detail","shoes","find","item","shoes_url","onChange","e","target","value","src","width","onClick","사본재고","재고변경","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","Cartrow","index","name","quan","connect","state","Table","striped","bordered","hover","map","createContext","MainPage","loadingUI","loadingUI_fn","Button","Provider","ShoesItem","LoadingMsg","axios","get","then","result","res","data","ajaxPush","catch","finally","li_item","li_index","li_img","App","Data","shoes변경","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","as","to","NavDropdown","Divider","exact","path","moredata","rawdata","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wKAAe,I,2CCAA,G,MAAA,CACX,CACIA,GAAK,EACLC,MAAQ,kBACRC,QAAU,iBACVC,MAAQ,MAGZ,CACIH,GAAK,EACLC,MAAQ,WACRC,QAAU,gBACVC,MAAQ,MAGZ,CACIH,GAAK,EACLC,MAAQ,cACRC,QAAU,qBACVC,MAAQ,Q,+ECTZC,EAAKC,IAAOC,IAAV,gDAGFC,EAAKF,IAAOG,GAAV,wEAEO,SAAAC,GAAK,OAAIA,EAAMC,gBAGNC,IAAMC,UA6G5B,SAASC,EAAWJ,GAEhBK,qBAAU,WACNL,EAAMM,gCAAM,MAGhB,IAAMC,EAASP,EAAMO,OACrB,OAAOC,SAASD,IACZ,KAAK,EACD,OAAO,2DACX,KAAK,EACD,OAAO,2DACX,QACI,OAAO,4DAKnB,SAASE,EAAKT,GACV,OACI,gDAASA,EAAMU,gBAKvB,SAASC,IACL,OACI,qBAAKC,UAAU,qBAAf,SACI,8GAKGC,MAlIf,SAAoBb,GAChB,MAA6Bc,oBAAS,GAAtC,mBAAKC,EAAL,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAKG,EAAL,KAAgBC,EAAhB,KACA,EAAyBJ,mBAAS,GAAlC,mBAAKP,EAAL,KAAYY,EAAZ,KACA,EAAkBL,oBAAS,GAA3B,mBAAKM,EAAL,KAASd,EAAT,KAGIe,EAAYC,qBAAWC,GAE3BlB,qBAAU,WAGN,IAAImB,EAAQC,YAAW,WAKnBT,GAAY,KACd,KAEF,OAAO,WAAMU,QAAQC,IAAI,iBAAkBC,aAAaJ,MAC1D,IAEF,IAAKjC,EAAMsC,cAANtC,GACDuC,EAAUC,cACRC,EAAehC,EAAMiC,MAAMC,MAAK,SAACC,GAAS,OAAOA,EAAK5C,IAAIA,KAC1D6C,EAAS,mDAAgD5B,SAASjB,GAAI,EAA7D,QAETmB,EAAKV,EAAMU,aAEjB,OACI,gCACA,sBAAKE,UAAU,YAAf,UACI,qEAAoBS,EAAU,MAC9B,eAAC,EAAD,WACI,cAAC,EAAD,CAAI,eAAI,SAAR,qBACA,cAAC,EAAD,CAAIT,UAAU,MAAd,uBAGHK,EACD,uBAAOoB,SAAU,SAACC,GACdpB,EAAaoB,EAAEC,OAAOC,UAItBzB,EAEA,cAACJ,EAAD,IAAW,KAEf,sBAAKC,UAAU,MAAf,UACA,qBAAKA,UAAU,WAAf,SACI,qBAAK6B,IAAKL,EAAWM,MAAM,WAE/B,sBAAK9B,UAAU,gBAAf,UACI,oBAAIA,UAAU,OAAd,SAAsBoB,EAAaxC,QACnC,4BAAIwC,EAAavC,UACjB,4BAAIuC,EAAatC,QAEjB,cAACe,EAAD,CAAM,eAAIC,EAAGnB,KAEb,wBAAQqB,UAAU,iBAAiB+B,QAAS,WACxC,IAAIC,EAAI,YAAOlC,GAEfkC,EAAKrD,GAAMqD,EAAKrD,GAAI,EAGpBS,EAAM6C,yBAAKD,IANf,sCAPJ,OAiBI,wBAAQhC,UAAU,iBAAiB+B,QAAS,WACxCb,EAAQgB,UADZ,+CAQR,eAACC,EAAA,EAAD,CAAKnC,UAAU,OAAOoC,QAAQ,OAAOC,iBAAiB,SAAtD,UACI,cAACF,EAAA,EAAIG,KAAL,UACA,cAACH,EAAA,EAAII,KAAL,CAAUC,SAAS,SAAST,QAAS,WAAKrC,GAAM,GAAQa,EAAU,IAAlE,4BAEA,cAAC4B,EAAA,EAAIG,KAAL,UACA,cAACH,EAAA,EAAII,KAAL,CAAUC,SAAS,SAAST,QAAS,WAAKrC,GAAM,GAAQa,EAAU,IAAlE,+BAIJ,cAACkC,EAAA,EAAD,CAAeC,GAAIlC,EAAKmC,WAAW,MAAMC,QAAS,IAAlD,SACI,cAACpD,EAAD,CAAYG,OAAQA,EAAQ,iCAAOD,U,0CC1F/C,SAASmD,EAAQzD,GACjB,OACI,+BACA,6BAAMQ,SAASR,EAAM0D,OAAO,IAC5B,6BAAM1D,EAAMmC,KAAKwB,OACjB,6BAAM3D,EAAMmC,KAAKyB,OACjB,0CAaWC,mBAPf,SAAsBC,GAClB,MAAO,CAEHA,MAASA,KAIFD,EA3Cf,SAAc7D,GACd,OACI,8BACA,eAAC+D,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACA,gCACI,+BACA,mCACA,oDACA,8CACA,mDAGJ,gCAEQlE,EAAM8D,MAAMK,KAAI,SAAChC,EAAKuB,GAClB,OAAQ,cAACD,EAAD,CAAStB,KAAMA,EAAMuB,MAAOA,iBCNzCnC,EAAYrB,IAAMkE,gBA+E7B,SAASC,EAASrE,GAEhB,MAAgCc,oBAAS,GAAzC,mBAAKwD,EAAL,KAAgBC,EAAhB,KAEA,OACI,gCACE,qBAAK3D,UAAU,iBAAf,SACA,sBAAKA,UAAU,YAAf,UACE,gDACA,+JAIA,4BACE,cAAC4D,EAAA,EAAD,CAAQxB,QAAQ,UAAhB,+BAKN,sBAAKpC,UAAU,YAAf,UAEE,cAAC,EAAU6D,SAAX,CAAoBjC,MAAOxC,EAAMU,aAAjC,SAEA,qBAAKE,UAAU,MAAf,SACGZ,EAAMiC,MAAMkC,KAAI,SAAChC,EAAKuB,GACrB,OAAQ,cAACgB,EAAD,CAAWvC,KAAMA,EAAMuB,MAAOA,GAAYA,UAOrDY,EAAU,cAACK,EAAD,IAAe,KAC1B,wBAAQ/D,UAAU,kBAAkB+B,QAAS,WAK3C4B,GAAa,GAGbK,IAAMC,IAAI,kDACTC,MAAK,SAACC,GACLrD,QAAQC,IAAI,kCACZ4C,GAAa,GACb,IAAMS,EAAMD,EAAOE,KACnBjF,EAAMkF,SAASF,MAEhBG,OAAM,WAAMzD,QAAQC,IAAI,qCACxByD,SAAQ,gBAhBX,sCA0BR,SAAST,IACP,OACE,gDAKJ,SAASD,EAAU1E,GAGRsB,qBAAWC,GAApB,IAEM8D,EAAUrF,EAAMmC,KAChBmD,EAAWtF,EAAM0D,MAAM,EACvB6B,EAAM,mDAA+CD,EAA/C,QACZ,OACE,sBAAK1E,UAAU,WAAf,UACE,qBAAK6B,IAAK8C,EAAQ7C,MAAM,SACxB,6BAAK2C,EAAQ7F,QACb,8BAAI6F,EAAQ5F,QAAZ,MAAwB4F,EAAQ3F,YAevB8F,MAzKf,WAQE,MAAsB1E,mBAAS2E,GAA/B,mBAAKxD,EAAL,KAAWyD,EAAX,KACA,EAAgB5E,mBAAS,CAAC,GAAG,GAAG,KAAhC,mBAAKJ,EAAL,KAAQmC,EAAR,KACA,EAA+B/B,mBAAS,CAAC,QAAQ,QAAQ,UAAzD,mBAAKO,EAAL,KAYA,OAZA,KAaE,sBAAKT,UAAU,MAAf,UACE,cAAC+E,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,sBACA,cAACL,EAAA,EAAOM,OAAR,CAAe,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiB3G,GAAG,mBAApB,SACE,eAACwD,EAAA,EAAD,CAAKnC,UAAU,UAAf,UACE,cAACmC,EAAA,EAAII,KAAL,CAAUgD,GAAIhD,IAAMiD,GAAG,IAAvB,kBACA,cAACrD,EAAA,EAAII,KAAL,CAAUgD,GAAIhD,IAAMiD,GAAG,YAAvB,oBACA,eAACC,EAAA,EAAD,CAAa7G,MAAM,WAAWD,GAAG,qBAAjC,UACE,cAAC8G,EAAA,EAAYnD,KAAb,CAAkB8C,KAAK,cAAvB,oBACA,cAACK,EAAA,EAAYnD,KAAb,CAAkB8C,KAAK,cAAvB,4BACA,cAACK,EAAA,EAAYnD,KAAb,CAAkB8C,KAAK,cAAvB,uBACA,cAACK,EAAA,EAAYC,QAAb,IACA,cAACD,EAAA,EAAYnD,KAAb,CAAkB8C,KAAK,cAAvB,yCASV,eAAC,IAAD,WACE,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,IAAlB,SACE,cAACnC,EAAD,CAAUpC,MAAOA,EAAOiD,SApChC,SAAkBuB,GAChB,IAAIC,EAAO,YAAOzE,GAClBwE,EAAStC,KAAI,SAAChC,EAAKuB,GACjBgD,EAAQC,KAAKxE,MAEfuD,EAAQgB,IA+B0C,eAAIhG,MAIlD,cAAC,IAAD,CAAO8F,KAAK,cAAZ,SACE,cAAC,EAAU/B,SAAX,CAAoBjC,MAAOnB,EAA3B,SACA,cAAC,EAAD,CAAYY,MAAOA,EAAO,eAAIvB,EAAI,2BAAMmC,QAK1C,cAAC,IAAD,CAAO2D,KAAK,QAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,OAAZ,SACE,mICpEKI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCIVO,EAAQC,aAAY,WAAM,MAAO,CAAC,CAAC9H,GAAG,EAAGoE,KAAK,2BAAQC,KAAK,GAAG,CAACrE,GAAG,EAAGoE,KAAK,4BAASC,KAAK,OAG5F0D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACA,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,UAIJK,SAASC,eAAe,SAM1Bd,K","file":"static/js/main.3cd51466.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default [\r\n    {\r\n        id : 0,\r\n        title : \"White and Black\",\r\n        content : \"Born in France\",\r\n        price : 120000\r\n    },\r\n\r\n    {\r\n        id : 1,\r\n        title : \"Red Knit\",\r\n        content : \"Born in Seoul\",\r\n        price : 110000\r\n    },\r\n\r\n    {\r\n        id : 2,\r\n        title : \"Grey Yordan\",\r\n        content : \"Born in the States\",\r\n        price : 130000\r\n    }\r\n] ","import React, {useContext, useEffect, useState} from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport '../scss/Detail.scss';\r\nimport {재고context} from '../App.js';\r\nimport { Nav } from 'react-bootstrap';\r\n//애니메이션\r\nimport {CSSTransition} from 'react-transition-group';\r\n//import {CSSTransition} from 'react-transition-group';\r\n\r\nlet 박스 = styled.div`\r\n    padding: 20px;\r\n`;\r\nlet 제목 = styled.h4`    \r\n    font-size : 25px;\r\n    color: ${props => props.색상};\r\n`;\r\n\r\nclass Detail2 extends React.Component{\r\n    componentDidMount(){\r\n        //컴포넌트가 Mount 되었을때 실행할 코드 (렌더링 될때)\r\n        //주로 Ajax 같은 것도 이런 곳에서 자주 사용\r\n    }\r\n    componentWillUnmount(){\r\n        //컴포넌트가 Unmount 되었을때 실행할 코드 (사라질 때)\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction DetailPage(props){\r\n    let [is_alert,is_alert_fn] = useState(true);\r\n    let [inputData, inputData_fn] = useState('');\r\n    let [tabidx,tabidx_fn] = useState(0);\r\n    let [스위치,스위치변경] = useState(false);\r\n\r\n    //공유CONTEXT\r\n    let sharedata = useContext(재고context);\r\n\r\n    useEffect(()=>{\r\n        //컴포넌트가 mount 되었을 때\r\n        //컴포넌트가 update 될 때        \r\n        let timer = setTimeout(()=>{            \r\n            // const alert_box =  document.getElementsByClassName('.my-alert my-alert2');\r\n            // const alert_box =  document.querySelector('.my-alert my-alert2');\r\n            //alert_box.setAttribute('style','display:none');\r\n            // alert_box.style.display='none';            \r\n            is_alert_fn(false);\r\n        },2000);\r\n        // return function closerAction(){ alert('unmount') }\r\n        return ()=>{ console.log('closer action'); clearTimeout(timer);  }\r\n    },[]);\r\n\r\n    let {id} = useParams();\r\n    let history = useHistory();\r\n    const shoes_detail = props.shoes.find((item)=>{ return item.id==id; });\r\n    const shoes_url = `https://codingapple1.github.io/shop/shoes${(parseInt(id)+1)}.jpg`;\r\n\r\n    const 재고 = props.재고;\r\n\r\n    return(\r\n        <div>\r\n        <div className=\"container\">\r\n            <div>공유CONEXTE문법 : {sharedata[0]}</div>\r\n            <박스>\r\n                <제목 색상={'tomato'} >Product</제목>\r\n                <제목 className=\"red\" >Detail</제목>\r\n            </박스>\r\n\r\n            {inputData}\r\n            <input onChange={(e)=>{\r\n                inputData_fn(e.target.value);\r\n            }} />\r\n\r\n            {\r\n                is_alert\r\n                ?\r\n                <Myalet />:null\r\n            }\r\n            <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <img src={shoes_url} width=\"100%\" />\r\n            </div>\r\n            <div className=\"col-md-6 mt-4\">\r\n                <h4 className=\"pt-5\">{shoes_detail.title}</h4>\r\n                <p>{shoes_detail.content}</p>\r\n                <p>{shoes_detail.price}</p>\r\n\r\n                <Info 재고={재고[id]} />\r\n\r\n                <button className=\"btn btn-danger\" onClick={()=>{\r\n                    let 사본재고 = [...재고];\r\n                    // console.log(사본재고);\r\n                    사본재고[id] = 사본재고[id]-1;\r\n                    // console.log(사본재고[0]);\r\n                    // props.재고변경([9,10,11]);\r\n                    props.재고변경(사본재고);\r\n                }}\r\n                >주문하기</button>\r\n                &nbsp;\r\n                <button className=\"btn btn-danger\" onClick={()=>{ \r\n                    history.goBack();\r\n                    // history.push('/');\r\n                }}>뒤로가기</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n\r\n        <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n            <Nav.Item>\r\n            <Nav.Link eventKey=\"link-0\" onClick={()=>{스위치변경(false); tabidx_fn(0)}}>정보</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n            <Nav.Link eventKey=\"link-1\" onClick={()=>{스위치변경(false); tabidx_fn(1)}}>상세</Nav.Link>\r\n            </Nav.Item>\r\n        </Nav>\r\n\r\n        <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n            <TabContent tabidx={tabidx} 스위치변경={스위치변경}/>\r\n        </CSSTransition>\r\n        \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TabContent(props){\r\n\r\n    useEffect(()=>{\r\n        props.스위치변경(true);\r\n    });\r\n\r\n    const tabidx = props.tabidx\r\n    switch(parseInt(tabidx)){\r\n        case 0:\r\n            return <div>상품설명</div>\r\n        case 1:\r\n            return <div>배송정보</div>\r\n        default:\r\n            return <div>상품설명</div>\r\n    }    \r\n}\r\n\r\n\r\nfunction Info(props){\r\n    return (\r\n        <p>재고 : {props.재고}</p>\r\n    )\r\n}\r\n\r\n\r\nfunction Myalet(){\r\n    return(\r\n        <div className=\"my-alert my-alert2\">\r\n            <p>재고가 얼마 남지 않았습니다</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailPage;","import React from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Cart(props){\r\nreturn(\r\n    <div>\r\n    <Table striped bordered hover>\r\n    <thead>\r\n        <tr>\r\n        <th>#</th>\r\n        <th>상품명</th>\r\n        <th>수량</th>\r\n        <th>변경</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        {\r\n            props.state.map((item,index)=>{                \r\n                return (<Cartrow item={item} index={index}/>)\r\n            })\r\n        }\r\n    </tbody>\r\n    </Table>    \r\n    </div>\r\n)\r\n}\r\n\r\nfunction Cartrow(props){    \r\nreturn(\r\n    <tr>\r\n    <td>{ parseInt(props.index)+1 }</td>\r\n    <td>{ props.item.name }</td>\r\n    <td>{ props.item.quan }</td>\r\n    <td>data3</td>\r\n    </tr>        \r\n)\r\n}\r\n\r\n\r\nfunction state를props화(state){\r\n    return {\r\n        // 상품명 : state.name\r\n        state :  state\r\n    }\r\n}\r\n\r\nexport default connect(state를props화)(Cart)\r\n\r\n// export default Cart;","/* eslint-disable */\n\nimport logo from './logo.svg';\nimport React, {useState,useContext} from 'react';\nimport { Navbar,Container,Nav,NavDropdown,Button } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nimport DetailPage from './Component/Detail.js';\nimport axios from 'axios';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport Cart from './Component/Cart.js';\n\n\nexport let 재고context = React.createContext();\n\n\nfunction App() {\n\n  //데이터는 상위컴포넌트에서 하위컴포넌트로 전해주는 방식으로 써야됨\n  //일종의 국룰...인데 \n  //그 이유는 각 하위컴포넌트에서 상위컴포넌트로 데이터를 올려보내주는 방식이\n  //나중에 더 힘든 상황을 만듬\n  //그래서 다른 파일로 state를 뺀다던지 아니면  \n  //redux파일에 보관한다. (redux 란 부분 찾아보기)\n  let [shoes,shoes변경] = useState(Data);\n  let [재고,재고변경] = useState([10,11,12]);\n  let [sharedata,sharedata_fn] = useState(['test1','test2','test3']);\n\n  function ajaxPush(moredata){\n    let rawdata = [...shoes];    \n    moredata.map((item,index)=>{\n      rawdata.push(item);\n    })    \n    shoes변경(rawdata);\n    //정답\n    // shoes변경([...shoes,...moredata]);\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">ShoeShop</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/Detail/2\">Detail</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n\n      \n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage shoes={shoes} ajaxPush={ajaxPush} 재고={재고}></MainPage>\n        </Route>\n\n        \n        <Route path=\"/detail/:id\">\n          <재고context.Provider value={sharedata}>        \n          <DetailPage shoes={shoes} 재고={재고} 재고변경={재고변경}></DetailPage>\n          </재고context.Provider>\n        </Route>       \n        \n\n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n\n        <Route path=\"/:id\">\n          <div>아무거나 적었을때 이거 보여주셈</div>\n        </Route>\n      </Switch>\n\n\n\n    </div>\n  );\n}\n\n\n\nfunction MainPage(props){\n\n  let [loadingUI, loadingUI_fn] = useState(false);\n\n  return(\n      <div>\n        <div className=\"Wrap-Jumbotron\">\n        <div className=\"Jumbotron\">\n          <h1>20% Season Off</h1>\n          <p>\n            This is a simple hero unit, a simple jumbotron-style component for calling\n            extra attention to featured content or information.\n          </p>\n          <p>\n            <Button variant=\"primary\">Learn more</Button>\n          </p>\n        </div>\n      </div>\n\n      <div className=\"container\">\n\n        <재고context.Provider value={props.재고}>\n\n        <div className=\"row\">\n          {props.shoes.map((item,index)=>{\n            return( <ShoesItem item={item} index={index} key={index}/>)\n          })}\n        </div>\n\n        </재고context.Provider>\n\n\n        {loadingUI?<LoadingMsg />:null}\n        <button className=\"btn btn-primary\" onClick={()=>{\n\n          // axios.post('서버URL',{ id:'codingapple',pw:1234 });\n\n          \n          loadingUI_fn(true);\n\n          //fetch('https://codingapple1.github.io/shop/data2.json')          \n          axios.get('https://codingapple1.github.io/shop/data2.json')\n          .then((result)=>{ \n            console.log('성공했어요');            \n            loadingUI_fn(false);\n            const res = result.data;\n            props.ajaxPush(res);                        \n          })\n          .catch(()=>{ console.log('실패했어요') })\n          .finally(()=>{})\n          ;\n\n          \n        }}>더보기</button>\n      </div>\n    </div>\n  )\n}\n\nfunction LoadingMsg(){\n  return(\n    <div>Now Loaing...</div>\n  )\n}\n\n\nfunction ShoesItem(props){\n\n  //hook\n  let 재고 = useContext(재고context);\n\n  const li_item = props.item;\n  const li_index = props.index+1;  \n  const li_img = `https://codingapple1.github.io/shop/shoes${li_index}.jpg`;\n  return(\n    <div className=\"col-md-4\">\n      <img src={li_img} width=\"100%\" />\n      <h4>{li_item.title}</h4>\n      <p>{li_item.content} & {li_item.price}</p>\n      {/* {재고[0]} */}\n      {/* <재고데이터></재고데이터> */}\n\n    </div>    \n  )\n}\n\nfunction 재고데이터(){\n  let 재고 = useContext(재고context);\n  return(\n    <p>재고 : {재고[0]}</p>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\n//리덕스 REDUX\nimport {Provider} from 'react-redux';\nimport { createStore } from 'redux';\nlet store = createStore(()=>{ return [{id:0, name:'멋진신발', quan:2},{id:1, name:'멋진신발2', quan:3}] });\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>      \n    </BrowserRouter>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}